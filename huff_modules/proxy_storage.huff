#include "./proxy_base.huff"

// stack: [ bottom top ]

// TODO:
// - take target from constructor arg rather than caller

#define macro TARGET_SLOT = takes(0) returns(1) { 0x0 }

#define macro TARGET = takes(0) returns(1) {
    // sload(TARGET_SLOT)

    // []
    TARGET_SLOT()                   // [ TARGET_SLOT() ]
    sload                           // [ ]
}


#define macro STORE_TARGET = takes(0) returns(0) {
    // sstore(key, value)
    // sstore(TARGET_SLOT, caller)

    // [ ]
    caller                          // [ caller ]
    TARGET_SLOT()                   // [ caller TARGET_SLOT() ]
    sstore                          // [ ]
}


// used to determine offset in constructor (size of constructor_shallow
// should equal size of constructor, which is then used as the offset
// for codecopy in the constructor)
#define macro CONSTRUCTOR_SHALLOW = takes(0) returns(0) {
    STORE_TARGET()
    COPY_RUNTIME_SHALLOW()
    return
}


#define macro CONSTRUCTOR = takes(0) returns(0) {
    // [ ]
    STORE_TARGET()                  // [ ]
    COPY_RUNTIME()                  // [ runtime_size 0x00 ]
    return                          // [ ]
}
